1710. Maximum Units on a Truck
Easy

You are assigned to put some amount of boxes onto one truck. 
You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:

numberOfBoxesi is the number of boxes of type i.
numberOfUnitsPerBoxi is the number of units in each box of the type i.

You are also given an integer truckSize, 
which is the maximum number of boxes that can be put on the truck. 
You can choose any boxes to put on the truck as long as the number of boxes does not exceed truckSize.
Return the maximum total number of units that can be put on the truck.

Example 1:
Input: boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4
Output: 8
Explanation: There are:
- 1 box of the first type that contains 3 units.
- 2 boxes of the second type that contain 2 units each.
- 3 boxes of the third type that contain 1 unit each.
You can take all the boxes of the first and second types, and one box of the third type.
The total number of units will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.

Example 2:
Input: boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10
Output: 91

Constraints:
1 <= boxTypes.length <= 1000
1 <= numberOfBoxesi, numberOfUnitsPerBoxi <= 1000
1 <= truckSize <= 106

// My first solution
class Solution:
    def maximumUnits(self, boxTypes: List[List[int]], truckSize: int) -> int:
        
        # sort the array acc to number of unites per box type 
        boxTypes = sorted(boxTypes, key=lambda x:x[1], reverse=True)
        
        # start filling the truck
        boxes = 0
        for i in range(len(boxTypes)):
            if truckSize >= boxTypes[i][0]:
                boxes += boxTypes[i][0] * boxTypes[i][1]
                truckSize -= boxTypes[i][0]
            else:
                boxes += truckSize * boxTypes[i][1]
                break
        return boxes

Runtime: 294 ms, faster than 28.21% of Python3 online submissions for Maximum Units on a Truck.
Memory Usage: 14.4 MB, less than 84.31% of Python3 online submissions for Maximum Units on a Truck.


O(n) using bucket sort
class Solution:
    def maximumUnits(self, boxTypes: List[List[int]], truckSize: int) -> int:
        # build up the bucket array, the indicies are the units per box
        # the value is the amount of boxes at that level
        boxes = [0] * 1001
        for box in boxTypes:
            boxes[box[1]] += box[0]
        
        units = 0
        # start from the back since we want the most units per box
        for i in range(1000, -1, -1):
            if boxes[i] != 0:
                if truckSize >= boxes[i]:
                    units += i*boxes[i]
                    truckSize -= boxes[i]
                else:
                    units += truckSize*i
                    break
        return units

Runtime: 262 ms, faster than 42.52% of Python3 online submissions for Maximum Units on a Truck.
Memory Usage: 14.3 MB, less than 84.31% of Python3 online submissions for Maximum Units on a Truck.

