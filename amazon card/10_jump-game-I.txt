55. Jump Game
Medium

You are given an integer array nums. 
You are initially positioned at the array's first index, 
and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.
 
Example 1:
Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

Example 2:
Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.

Constraints:
1 <= nums.length <= 104
0 <= nums[i] <= 105

// My solution
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        if len(nums) < 2: return True
        
        # Initialize current element to second last element
        # check if you can reach last element from current element
        # if you can, update the current element as the last element
        current = len(nums)-2
        last = len(nums)-1
        flag = False
        while current >= 0:
            if current + nums[current] >= last:
                flag = True
                last = current
            else:
                flag = False
            current -= 1
        return flag

Runtime: 655 ms, faster than 64.68% of Python3 online submissions for Jump Game.
Memory Usage: 15.2 MB, less than 82.21% of Python3 online submissions for Jump Game.