We are playing the Guess Game. The game is as follows:

I pick a number from 1 to n. You have to guess which number I picked.

Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.

You call a pre-defined API int guess(int num), which returns three possible results:

-1: Your guess is higher than the number I picked (i.e. num > pick).
1: Your guess is lower than the number I picked (i.e. num < pick).
0: your guess is equal to the number I picked (i.e. num == pick).
Return the number that I picked.

Example 1:

Input: n = 10, pick = 6
Output: 6
Example 2:

Input: n = 1, pick = 1
Output: 1
Example 3:

Input: n = 2, pick = 1
Output: 1

// My first solution
// straightforward, binary search
# The guess API is already defined for you.
# @param num, your guess
# @return -1 if my number is lower, 1 if my number is higher, otherwise return 0
# def guess(num: int) -> int:

class Solution:
    def guessNumber(self, n: int) -> int:
        
        # handle corner case
        if n == 1:
            return 1
        
        left, right = 0,n
        while left <= right:
            middle = (left + right)//2
            if guess(middle) == 0:
                return middle
            elif guess(middle) == 1:
                left = middle + 1
            else:
                right = middle - 1

result ->
Submission Detail
25 / 25 test cases passed.
Status: Accepted
Runtime: 32 ms (85%)
Memory Usage: 14 MB (55%)