Given an array of integers arr, return true if and only if it is a valid mountain array.

Recall that arr is a mountain array if and only if:

arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i]
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]

## first increases, then decreases.

Example 1:

Input: arr = [2,1]
Output: false
Example 2:

Input: arr = [3,5,5]
Output: false
Example 3:

Input: arr = [0,3,2,1]
Output: true

My first solution
class Solution:
    def validMountainArray(self, arr: List[int]) -> bool:
        if len(arr)<3:
            return False
        for i in range(len(arr)-1):
            if(arr[i+1]>arr[i]):
                i+=1
            else:
                break
        print(i)
        if i == len(arr)-1 or i<1:
            return False
        for j in range(i,len(arr)-1):
            if not (arr[j+1] < arr[j]):
                return False
        return True

result - Submission Detail
53 / 53 test cases passed.
Status: Accepted
Runtime: 331 ms (40%)
Memory Usage: 15.5 MB (88%)