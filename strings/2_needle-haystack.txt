Implement strStr().

Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Clarification:

What should we return when needle is an empty string? This is a great question to ask during an interview.

For the purpose of this problem, we will return 0 when needle is an empty string.
This is consistent to C's strstr() and Java's indexOf().

Example 1:
Input: haystack = "hello", needle = "ll"
Output: 2
Example 2:

Input: haystack = "aaaaa", needle = "bba"
Output: -1
Example 3:

Input: haystack = "", needle = ""
Output: 0

// My first code
// is trickier than it looks
// First I tried using two pointers 
// Got in trouble for casses like h="hellk" and n="lk"
// used a workaround, slightly less efficient

class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        
        # quickly handle corner cases
        if len(needle) == 0:
            return 0
        if len(haystack) == 0:
            return -1
        if len(needle) > len(haystack):
            return -1
        if len(needle) == 1 and len(haystack) == 1:
            if needle[0] == haystack[0]:
                return 0
            else:
                return -1

        for i in range(len(haystack)):
            if needle[:] == haystack[i:i+len(needle)]: //directly compare len(needle) chars in haystack with needle
                return i
            else:
                i += 1
        return -1

result - Submission Detail
80 / 80 test cases passed.
Status: Accepted
Runtime: 204 ms (11.5%) (because slicing inside for loop is time expensive)
Memory Usage: 14.2 MB (74%)

