Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, 
typically using all the original letters exactly once.
 

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false
 

Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters. 

Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?

// My first solution, followup handles
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        hashmap = defaultdict(int)
        for i in range(len(s)):
            hashmap[s[i]] += 1
        for i in range(len(t)):
            hashmap[t[i]] -= 1
        return False if any(hashmap.values()) else True

result -> 36 / 36 test cases passed.
Status: Accepted
Runtime: 48 ms (90%)
Memory Usage: 14.4 MB (99%)