290. Word Pattern
Easy

5666

654

Add to List

Share
Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.



// My soln

class Solution:
    def wordPattern(self, pattern: str, s: str) -> bool:
        h = {}
        s = s.split(' ')
        if len(pattern) != len(s): return False
        for i in range(len(pattern)):
            c = pattern[i]
            if c not in h:
                if s[i] not in h.values(): h[c] = s[i]
                else: return False
            else:
                if h[c] != s[i]: return False
        return True