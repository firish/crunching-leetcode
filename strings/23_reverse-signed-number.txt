7. Reverse Integer
Medium

Given a signed 32-bit integer x, return x with its digits reversed. 
If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], 
then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21
 
Constraints:
-231 <= x <= 231 - 1


// My code
class Solution:
    def reverse(self, x: int) -> int:
        low = -2**31
        high = 2**31 - 1
        if x == 0 or x >= high or x <= low: return 0
        
        ans = '-' if x < 0 else ''
        num = str(x)[::-1]
        if num[-1] == '-': num = num[:-1]
        while num[0] == '0' and len(num) > 0: num = num[1:]
        ans += num
        ans = int(ans)
        
        return ans if ans >= low and ans <= high else 0

Runtime: 23 ms, faster than 99.68% of Python3 online submissions for Reverse Integer.
Memory Usage: 13.9 MB, less than 62.97% of Python3 online submissions for Reverse Integer.


// inspired
def reverse(self, x):
    s = cmp(x, 0)
    r = int(`s*x`[::-1])
    return s*r * (r < 2**31)