Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1
 
Constraints:
1 <= s.length <= 105
s consists of only lowercase English letters.


class Solution:
    def firstUniqChar(self, s: str) -> int:
        hashmap = defaultdict(int)
        for el in s: hashmap[el] += 1
        for i in range(len(s)): 
            if hashmap[s[i]] == 1: return i
        return -1

Runtime: 204 ms, faster than 30.45% of Python3 online submissions for First Unique Character in a String.
Memory Usage: 14.2 MB, less than 18.30% of Python3 online submissions for First Unique Character in a Strin